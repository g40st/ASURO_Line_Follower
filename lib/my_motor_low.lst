GAS LISTING /tmp/ccN2LETY.s 			page 1


   1               		.file	"my_motor_low.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/ghost/Project/LineFollower/",100,0,2,.Ltext0
   8               		.stabs	"./lib/my_motor_low.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/ccN2LETY.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"./lib/inc/asuro.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  62               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  63               		.stabs	"/usr/lib/gcc/avr/4.9.2/include/stdint.h",130,0,0,0
  64               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  65               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  66               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  67               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  68               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  69               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  70               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  71               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  72               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  73               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  74               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  75               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  76               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  77               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  78               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  79               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  80               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  81               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  82               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  83               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  84               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  85               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  86               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
  87               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  88               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  89               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
  90               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
  91               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
  92               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
  93               		.stabn	162,0,0,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"int_farptr_t:t(4,1)=(6,5)",128,0,77,0
  96               		.stabs	"uint_farptr_t:t(4,2)=(6,6)",128,0,81,0
  97               		.stabn	162,0,0,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
 100               		.stabs	"__fuse_t:t(7,1)=(7,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
 101               		.stabn	162,0,0,0
 102               		.stabn	162,0,0,0
 103               		.stabs	"/usr/lib/avr/include/avr/pgmspace.h",130,0,0,0
 104               		.stabs	"/usr/lib/gcc/avr/4.9.2/include/stddef.h",130,0,0,0
 105               		.stabs	"size_t:t(9,1)=(0,4)",128,0,212,0
 106               		.stabn	162,0,0,0
 107               		.stabn	162,0,0,0
 108               		.stabs	"/usr/lib/avr/include/stdlib.h",130,0,0,0
 109               		.stabs	"/usr/lib/gcc/avr/4.9.2/include/stddef.h",130,0,0,0
 110               		.stabs	"wchar_t:t(11,1)=(0,1)",128,0,324,0
 111               		.stabn	162,0,0,0
 112               		.stabs	"div_t:t(10,1)=(10,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
 113               		.stabs	"ldiv_t:t(10,3)=(10,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
 114               		.stabs	"__compar_fn_t:t(10,5)=(10,6)=*(10,7)=f(0,1)",128,0,80,0
GAS LISTING /tmp/ccN2LETY.s 			page 3


 115               		.stabn	162,0,0,0
 116               		.stabs	"voidFuncPtr:t(1,1)=(1,2)=*(1,3)=f(0,47)",128,0,343,0
 117               		.stabn	162,0,0,0
 118               		.section	.text.MyMotorSpeed,"ax",@progbits
 119               		.stabs	"MyMotorSpeed:F(0,47)",36,0,80,MyMotorSpeed
 120               		.stabs	"left_speed:P(0,11)",64,0,81,24
 121               		.stabs	"right_speed:P(0,11)",64,0,82,22
 122               	.global	MyMotorSpeed
 123               		.type	MyMotorSpeed, @function
 124               	MyMotorSpeed:
 125               		.stabd	46,0,0
   1:./lib/my_motor_low.c **** /****************************************************************************/
   2:./lib/my_motor_low.c **** /*!
   3:./lib/my_motor_low.c ****   \file     my_motor_low.c
   4:./lib/my_motor_low.c **** 
   5:./lib/my_motor_low.c ****   \brief    Low Level Funktionen zur Steuerung der Motoren.
   6:./lib/my_motor_low.c **** 
   7:./lib/my_motor_low.c ****   Die Motorsteuerung erfolgt grundsaetzlich ueber die auf der Asuro-Platine\n
   8:./lib/my_motor_low.c ****   aufgebauten H-Bruecken. Dies ist eine Schaltung, ueber die ein Strom in\n
   9:./lib/my_motor_low.c ****   verschiedene Richtungen durch die Motoren geleitet werden kann.\n
  10:./lib/my_motor_low.c ****   Zur Geschwindigkeitssteuerung werden die beiden im Prozessor vorhandenen\n
  11:./lib/my_motor_low.c ****   PWM-Kanaele genutzt, deren Ausgangssignale die Staerke des Stromflusses in\n
  12:./lib/my_motor_low.c ****   den H-Bruecken beinflusst.\n
  13:./lib/my_motor_low.c ****   Die Initialisierung der PWM-Funktionalitaet erfolgt in der Funktion Init().
  14:./lib/my_motor_low.c **** 
  15:./lib/my_motor_low.c ****   \see      Defines fuer die Auswahl der ADC-Kanaele in asuro.h\n
  16:./lib/my_motor_low.c ****             FWD, RWD, BREAK, FREE
  17:./lib/my_motor_low.c **** 
  18:./lib/my_motor_low.c ****   \version  V001 - 05.02.2007 - Sternthaler\n
  19:./lib/my_motor_low.c ****             +++ MotorSpeed()\n
  20:./lib/my_motor_low.c ****             Der Wert vom Define MY_MOTOR_DIFF wird zur Haelfte auf die beiden
  21:./lib/my_motor_low.c ****             Motoren verteilt. Es werden die Grenzen von 0 und 255
  22:./lib/my_motor_low.c ****             beruecksichtigt. So lange es geht, wird die angegebene Differenz
  23:./lib/my_motor_low.c ****             aus MY_MOTOR_DIFF erhalten.
  24:./lib/my_motor_low.c ****             V002 - 27.03.2008 - m.a.r.v.i.n\n
  25:./lib/my_motor_low.c ****             Funktion in eigenen Datei abgesplittet und in MyMotorSpeed umbenannt.
  26:./lib/my_motor_low.c **** *****************************************************************************/
  27:./lib/my_motor_low.c **** /*****************************************************************************
  28:./lib/my_motor_low.c **** *                                                                            *
  29:./lib/my_motor_low.c **** *   This program is free software; you can redistribute it and/or modify     *
  30:./lib/my_motor_low.c **** *   it under the terms of the GNU General Public License as published by     *
  31:./lib/my_motor_low.c **** *   the Free Software Foundation; either version 2 of the License, or        *
  32:./lib/my_motor_low.c **** *   any later version.                                                       *
  33:./lib/my_motor_low.c **** *                                                                            *
  34:./lib/my_motor_low.c **** *****************************************************************************/
  35:./lib/my_motor_low.c **** #include "asuro.h"
  36:./lib/my_motor_low.c **** #include "myasuro.h"
  37:./lib/my_motor_low.c **** 
  38:./lib/my_motor_low.c **** 
  39:./lib/my_motor_low.c **** 
  40:./lib/my_motor_low.c **** /****************************************************************************/
  41:./lib/my_motor_low.c **** /*!
  42:./lib/my_motor_low.c ****   \brief
  43:./lib/my_motor_low.c ****   Steuert die Geschwindigkeit der Motoren.
  44:./lib/my_motor_low.c **** 
  45:./lib/my_motor_low.c ****   \param[in]
  46:./lib/my_motor_low.c ****   left_speed  Geschwindigkeit linker Motor (Bereich 0..255)
GAS LISTING /tmp/ccN2LETY.s 			page 4


  47:./lib/my_motor_low.c ****   \param[in]
  48:./lib/my_motor_low.c ****   right_speed Geschwindigkeit rechter Motor (Bereich 0..255)
  49:./lib/my_motor_low.c **** 
  50:./lib/my_motor_low.c ****   \return
  51:./lib/my_motor_low.c ****   nichts
  52:./lib/my_motor_low.c **** 
  53:./lib/my_motor_low.c ****   \see
  54:./lib/my_motor_low.c ****   Die Initialisierung der PWM-Funktionalitaet erfolgt in der Funktion Init().
  55:./lib/my_motor_low.c **** 
  56:./lib/my_motor_low.c ****   \par  Arbeitsweise:
  57:./lib/my_motor_low.c ****   Ueber die Parameter werden die beiden Kanaele der PWM-Funktionalitaet im\n
  58:./lib/my_motor_low.c ****   Prozessor angesteuert. Diese Art der Geschwindigkeitsreglung beruht darauf,\n
  59:./lib/my_motor_low.c ****   dass ein digitaler Output-Pin in schneller Folge an- und ausgeschaltet wird.\n
  60:./lib/my_motor_low.c ****   Mit dem Parameter wird nun gesteuert wie \b lange der Strom im \b Verhaeltniss \n
  61:./lib/my_motor_low.c ****   zur Zykluszeit \b angeschaltet ist.\n
  62:./lib/my_motor_low.c ****   Wird z.B. ein Wert von 150 fuer einen Parameter uebergeben, dann wird fuer\n
  63:./lib/my_motor_low.c ****   150 / 255-tel der Zykluszeit der Port auf 1 geschaltet und somit ist die\n
  64:./lib/my_motor_low.c ****   Motorleistung entsprechend reduziert.\n
  65:./lib/my_motor_low.c ****   Daraus ergibt sich auch dass der Asuro \b noch \b nicht bei einem Wert von\n
  66:./lib/my_motor_low.c ****   20 fahren wird, da diese Leistung nicht ausreicht ihn 'anzuschieben'.\n
  67:./lib/my_motor_low.c ****   (PWM = Pulsweitenmodulation)\n
  68:./lib/my_motor_low.c ****   Der Define MY_MOTOR_DIFF aus myasuro.h wird jeweils zur Haelfte auf die\n
  69:./lib/my_motor_low.c ****   beiden Motoren verteilt. Es werden die Grenzen von 0 und 255 beruecksichtigt.\n
  70:./lib/my_motor_low.c ****   So lange es geht, wird die angegebene Differenz aus MY_MOTOR_DIFF erhalten.
  71:./lib/my_motor_low.c **** 
  72:./lib/my_motor_low.c ****   \par  Beispiel:
  73:./lib/my_motor_low.c ****   (Nur zur Demonstration der Parameter/Returnwerte)
  74:./lib/my_motor_low.c ****   \code
  75:./lib/my_motor_low.c ****   // Setzt die Geschwindigkeit fuer den linken Motor
  76:./lib/my_motor_low.c ****   // auf 150 und stoppt den rechten Motor.
  77:./lib/my_motor_low.c ****   MotorSpeed (150, 0);
  78:./lib/my_motor_low.c ****   \endcode
  79:./lib/my_motor_low.c **** *****************************************************************************/
  80:./lib/my_motor_low.c **** void MyMotorSpeed (
  81:./lib/my_motor_low.c ****   unsigned char left_speed,
  82:./lib/my_motor_low.c ****   unsigned char right_speed)
  83:./lib/my_motor_low.c **** {
 126               		.stabn	68,0,83,.LM0-.LFBB1
 127               	.LM0:
 128               	.LFBB1:
 129               	/* prologue: function */
 130               	/* frame size = 0 */
 131               	/* stack size = 0 */
 132               	.L__stack_usage = 0
  84:./lib/my_motor_low.c ****            int  l_speed;
  85:./lib/my_motor_low.c ****            int  r_speed;
  86:./lib/my_motor_low.c **** 
  87:./lib/my_motor_low.c ****   if (MY_MOTOR_DIFF != 0)
  88:./lib/my_motor_low.c ****   {
  89:./lib/my_motor_low.c ****     /*
  90:./lib/my_motor_low.c ****       Das Ganze macht nur Sinn, wenn mindestens ein Motor fahren soll.
  91:./lib/my_motor_low.c ****     */
  92:./lib/my_motor_low.c ****     if (left_speed  > 0  ||
  93:./lib/my_motor_low.c ****         right_speed > 0)
  94:./lib/my_motor_low.c ****     {
  95:./lib/my_motor_low.c ****       /*
  96:./lib/my_motor_low.c ****         Bei positivem MY_MOTOR_DIFF wird der rechte Motor verstaerkt.
GAS LISTING /tmp/ccN2LETY.s 			page 5


  97:./lib/my_motor_low.c ****         Bei negativem MY_MOTOR_DIFF wird der linke  Motor verstaerkt.
  98:./lib/my_motor_low.c ****       */
  99:./lib/my_motor_low.c ****       l_speed = left_speed  - MY_MOTOR_DIFF / 2;
 100:./lib/my_motor_low.c ****       r_speed = right_speed + MY_MOTOR_DIFF / 2;
 101:./lib/my_motor_low.c **** 
 102:./lib/my_motor_low.c ****       /*
 103:./lib/my_motor_low.c ****         Wertebereich von 0 bis 255 pruefen.
 104:./lib/my_motor_low.c ****         Unterscheiden nach positiver, bzw. negativer Vorgabe.
 105:./lib/my_motor_low.c ****       */
 106:./lib/my_motor_low.c ****       if (MY_MOTOR_DIFF > 0)
 107:./lib/my_motor_low.c ****       {
 108:./lib/my_motor_low.c ****         /*
 109:./lib/my_motor_low.c ****           Bei positivem MY_MOTOR_DIFF kann nur die rechte Seite > 255 werden.
 110:./lib/my_motor_low.c ****         */
 111:./lib/my_motor_low.c ****         if (r_speed > 255)
 112:./lib/my_motor_low.c ****         {
 113:./lib/my_motor_low.c ****           /*
 114:./lib/my_motor_low.c ****             Um die Differenz von MY_MOTOR_DIFF weiterhin zu erhalten, wird nun
 115:./lib/my_motor_low.c ****             die linke Seite noch weiter reduziert, und die rechte Seite auf
 116:./lib/my_motor_low.c ****             das zulaessige Maximum gesetzt.
 117:./lib/my_motor_low.c ****           */
 118:./lib/my_motor_low.c ****           l_speed -= (r_speed - 255);
 119:./lib/my_motor_low.c ****           r_speed  = 255;
 120:./lib/my_motor_low.c ****         }
 121:./lib/my_motor_low.c ****         if (l_speed < 0)
 122:./lib/my_motor_low.c ****         {
 123:./lib/my_motor_low.c ****           /*
 124:./lib/my_motor_low.c ****             Die linke Seite ist nun unter dem zulaessige Minimum von 0.
 125:./lib/my_motor_low.c ****             Auch dies muss korrigiert werden.
 126:./lib/my_motor_low.c ****           */
 127:./lib/my_motor_low.c ****           l_speed = 0;
 128:./lib/my_motor_low.c ****         }
 129:./lib/my_motor_low.c ****       }
 130:./lib/my_motor_low.c ****       else
 131:./lib/my_motor_low.c ****       {
 132:./lib/my_motor_low.c ****         /*
 133:./lib/my_motor_low.c ****           Bei negativem MY_MOTOR_DIFF kann nur die linke Seite > 255 werden.
 134:./lib/my_motor_low.c ****         */
 135:./lib/my_motor_low.c ****         if (l_speed > 255)
 136:./lib/my_motor_low.c ****         {
 137:./lib/my_motor_low.c ****           /*
 138:./lib/my_motor_low.c ****             Um die Differenz von MY_MOTOR_DIFF weiterhin zu erhalten, wird nun
 139:./lib/my_motor_low.c ****             die rechte Seite noch weiter reduziert, und die linke Seite auf
 140:./lib/my_motor_low.c ****             das zulaessige Maximum gesetzt.
 141:./lib/my_motor_low.c ****           */
 142:./lib/my_motor_low.c ****           r_speed -= (l_speed - 255);
 143:./lib/my_motor_low.c ****           l_speed  = 255;
 144:./lib/my_motor_low.c ****         }
 145:./lib/my_motor_low.c ****         if (r_speed < 0)
 146:./lib/my_motor_low.c ****         {
 147:./lib/my_motor_low.c ****           /*
 148:./lib/my_motor_low.c ****             Die rechte Seite ist nun unter dem zulaessige Minimum von 0.
 149:./lib/my_motor_low.c ****             Auch dies muss korrigiert werden.
 150:./lib/my_motor_low.c ****           */
 151:./lib/my_motor_low.c ****           r_speed = 0;
 152:./lib/my_motor_low.c ****         }
 153:./lib/my_motor_low.c ****       }
GAS LISTING /tmp/ccN2LETY.s 			page 6


 154:./lib/my_motor_low.c **** 
 155:./lib/my_motor_low.c ****       left_speed  = l_speed;
 156:./lib/my_motor_low.c ****       right_speed = r_speed;
 157:./lib/my_motor_low.c ****     }
 158:./lib/my_motor_low.c ****   }
 159:./lib/my_motor_low.c **** 
 160:./lib/my_motor_low.c ****   MotorSpeed(left_speed, right_speed);
 133               		.stabn	68,0,160,.LM1-.LFBB1
 134               	.LM1:
 135 0000 00C0      		rjmp MotorSpeed
 136               		.size	MyMotorSpeed, .-MyMotorSpeed
 137               	.Lscope1:
 138               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 139               		.stabd	78,0,0
 140               		.text
 141               		.stabs	"",100,0,0,.Letext0
 142               	.Letext0:
 143               		.ident	"GCC: (GNU) 4.9.2"
GAS LISTING /tmp/ccN2LETY.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 my_motor_low.c
     /tmp/ccN2LETY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccN2LETY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccN2LETY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccN2LETY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccN2LETY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccN2LETY.s:124    .text.MyMotorSpeed:0000000000000000 MyMotorSpeed

UNDEFINED SYMBOLS
MotorSpeed
