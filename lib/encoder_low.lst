GAS LISTING /tmp/ccNHaMON.s 			page 1


   1               		.file	"encoder_low.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/ghost/Project/LineFollower/",100,0,2,.Ltext0
   8               		.stabs	"./lib/encoder_low.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/ccNHaMON.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"./lib/inc/asuro.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  62               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  63               		.stabs	"/usr/lib/gcc/avr/4.9.2/include/stdint.h",130,0,0,0
  64               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  65               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  66               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  67               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  68               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  69               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  70               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  71               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  72               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  73               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  74               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  75               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  76               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  77               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  78               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  79               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  80               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  81               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  82               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  83               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  84               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  85               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  86               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
  87               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  88               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  89               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
  90               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
  91               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
  92               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
  93               		.stabn	162,0,0,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"int_farptr_t:t(4,1)=(6,5)",128,0,77,0
  96               		.stabs	"uint_farptr_t:t(4,2)=(6,6)",128,0,81,0
  97               		.stabn	162,0,0,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
 100               		.stabs	"__fuse_t:t(7,1)=(7,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
 101               		.stabn	162,0,0,0
 102               		.stabn	162,0,0,0
 103               		.stabs	"/usr/lib/avr/include/avr/pgmspace.h",130,0,0,0
 104               		.stabs	"/usr/lib/gcc/avr/4.9.2/include/stddef.h",130,0,0,0
 105               		.stabs	"size_t:t(9,1)=(0,4)",128,0,212,0
 106               		.stabn	162,0,0,0
 107               		.stabn	162,0,0,0
 108               		.stabs	"/usr/lib/avr/include/stdlib.h",130,0,0,0
 109               		.stabs	"/usr/lib/gcc/avr/4.9.2/include/stddef.h",130,0,0,0
 110               		.stabs	"wchar_t:t(11,1)=(0,1)",128,0,324,0
 111               		.stabn	162,0,0,0
 112               		.stabs	"div_t:t(10,1)=(10,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
 113               		.stabs	"ldiv_t:t(10,3)=(10,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
 114               		.stabs	"__compar_fn_t:t(10,5)=(10,6)=*(10,7)=f(0,1)",128,0,80,0
GAS LISTING /tmp/ccNHaMON.s 			page 3


 115               		.stabn	162,0,0,0
 116               		.stabs	"voidFuncPtr:t(1,1)=(1,2)=*(1,3)=f(0,47)",128,0,343,0
 117               		.stabn	162,0,0,0
 118               		.section	.text.EncoderInit,"ax",@progbits
 119               		.stabs	"EncoderInit:F(0,47)",36,0,94,EncoderInit
 120               	.global	EncoderInit
 121               		.type	EncoderInit, @function
 122               	EncoderInit:
 123               		.stabd	46,0,0
   1:./lib/encoder_low.c **** /****************************************************************************/
   2:./lib/encoder_low.c **** /*!
   3:./lib/encoder_low.c ****   \file     encoder_low.c
   4:./lib/encoder_low.c **** 
   5:./lib/encoder_low.c ****   \brief    Low Level Funktionen für Radencoder und Odometrie.
   6:./lib/encoder_low.c **** 
   7:./lib/encoder_low.c ****   \see      Defines zum setzen von Port's und Konfigurationen in asuro.h\n
   8:./lib/encoder_low.c ****             TRUE, FALSE, LEFT, RIGHT
   9:./lib/encoder_low.c **** 
  10:./lib/encoder_low.c ****   \version  V--- -
  11:./lib/encoder_low.c ****             KEINE original Version von der ASURO CD vom DLR\n
  12:./lib/encoder_low.c ****   \version  V--- - bis zum 07.01.2007 - \n
  13:./lib/encoder_low.c ****             Bitte in Datei CHANGELOG nachsehen.\n
  14:./lib/encoder_low.c ****             Das Grundgeruest dieser Funktionen wurde von stochri erstellt.\n
  15:./lib/encoder_low.c ****   \version  V001 - 13.01.2007 - m.a.r.v.i.n\n
  16:./lib/encoder_low.c ****             +++ Alle Funktionen\n
  17:./lib/encoder_low.c ****             Zerlegte Sourcen in einzelne Dateien fuer eine echte Library.
  18:./lib/encoder_low.c ****   \version  V002 - 27.01.2007 - Sternthaler\n
  19:./lib/encoder_low.c ****             +++ Alle Funktionen\n
  20:./lib/encoder_low.c ****             Kommentierte Version (KEINE Funktionsaenderung)
  21:./lib/encoder_low.c ****   \version  V003 - 21.02.2007 - Sternthaler\n
  22:./lib/encoder_low.c ****             +++ EncoderStart()\n
  23:./lib/encoder_low.c ****             KEINE Funktionsaenderung\n
  24:./lib/encoder_low.c ****             Die Fehlerbeschreibung von Sternthaler ersatzlos gestrichen, da\n
  25:./lib/encoder_low.c ****             die Funktionalitaet von stochri durch das Starten des AD-Wandlers\n
  26:./lib/encoder_low.c ****             in EncoderInit() im sogenannten 'free running'-Mode gegeben ist.
  27:./lib/encoder_low.c ****   \version  V004 - 27.01.2008 - m.a.r.v.i.n\n
  28:./lib/encoder_low.c ****             Die Encoder Interrupt Funktion IsrEnc wird in der EncoderInit\n
  29:./lib/encoder_low.c ****             Funktion über die Variable AdcIntFunc in den ADC Interrupt\n
  30:./lib/encoder_low.c ****             eingebunden und von dort aufgerufen
  31:./lib/encoder_low.c ****   \version  V005 - 29.03.2009 - rossir\n
  32:./lib/encoder_low.c ****             A/D Wandler Abfrage ueber Interrupt  
  33:./lib/encoder_low.c **** 
  34:./lib/encoder_low.c **** *****************************************************************************/
  35:./lib/encoder_low.c **** /*****************************************************************************
  36:./lib/encoder_low.c **** *                                                                            *
  37:./lib/encoder_low.c **** *   This program is free software; you can redistribute it and/or modify     *
  38:./lib/encoder_low.c **** *   it under the terms of the GNU General Public License as published by     *
  39:./lib/encoder_low.c **** *   the Free Software Foundation; either version 2 of the License, or        *
  40:./lib/encoder_low.c **** *   any later version.                                                       *
  41:./lib/encoder_low.c **** *                                                                            *
  42:./lib/encoder_low.c **** *****************************************************************************/
  43:./lib/encoder_low.c **** #include "asuro.h"
  44:./lib/encoder_low.c **** #include "myasuro.h"
  45:./lib/encoder_low.c **** 
  46:./lib/encoder_low.c **** 
  47:./lib/encoder_low.c **** /****************************************************************************/
  48:./lib/encoder_low.c **** /*!
GAS LISTING /tmp/ccNHaMON.s 			page 4


  49:./lib/encoder_low.c ****   \brief
  50:./lib/encoder_low.c ****   Den Interrupt Betrieb der Odometriesensoren-Messung initialisieren und starten.
  51:./lib/encoder_low.c **** 
  52:./lib/encoder_low.c ****   \see
  53:./lib/encoder_low.c ****   autoencode, encoder
  54:./lib/encoder_low.c **** 
  55:./lib/encoder_low.c ****   \par  Funktionsweise:
  56:./lib/encoder_low.c ****   Globale Variable autoencode auf TRUE.\n
  57:./lib/encoder_low.c ****   Diese Funktion wird nun verlassen und das aufrufende Hauptprogramm arbeit\n
  58:./lib/encoder_low.c ****   weiter. In der Zwischenzeit ist der AD-Wandler beschaeftigt um das Mess-\n
  59:./lib/encoder_low.c ****   ergebniss zu ermitteln.\n
  60:./lib/encoder_low.c ****   Ist der Wandler fertig, wird der Interrupt zum AD-Wandler aufgerufen und in\n
  61:./lib/encoder_low.c ****   der dazu vorhandene Interrupt-Funktion aus asuro.c bearbeitet.\n
  62:./lib/encoder_low.c ****   Dort wird nun AUTOMATISCH das Messergebnis ausgewertet, ein erkannter\n
  63:./lib/encoder_low.c ****   Hell- Dunkel-Wechsel an der Encoderscheibe erkannt und dadurch der Zaehler\n
  64:./lib/encoder_low.c ****   in der globalen Variablen encoder[] weitergezaehlt.\n
  65:./lib/encoder_low.c ****   Ausserdem wird dort dann der AD-Wandler fuer die andere Seite gestartet.\n
  66:./lib/encoder_low.c ****   Da dies dann immer im Wechsel laeuft, kann das Hauptprogramm, ohne\n
  67:./lib/encoder_low.c ****   weiters Zutun von nun ab auf die Zaehlerwerte in encoder[] zugreifen.
  68:./lib/encoder_low.c **** 
  69:./lib/encoder_low.c ****   \par  Beispiel:
  70:./lib/encoder_low.c ****   (Nur zur Demonstration der Parameter/Returnwerte)
  71:./lib/encoder_low.c ****   \code
  72:./lib/encoder_low.c ****   int main (void)
  73:./lib/encoder_low.c ****   {
  74:./lib/encoder_low.c ****     Init ();
  75:./lib/encoder_low.c **** 
  76:./lib/encoder_low.c ****     EncoderInit ();
  77:./lib/encoder_low.c **** 
  78:./lib/encoder_low.c ****     MotorDir (FWD, FWD);
  79:./lib/encoder_low.c ****     MotorSpeed (150, 150);
  80:./lib/encoder_low.c ****     while (1)
  81:./lib/encoder_low.c ****     (
  82:./lib/encoder_low.c ****       // Dein Programm
  83:./lib/encoder_low.c **** 
  84:./lib/encoder_low.c ****       if (encoder [0] > 500)
  85:./lib/encoder_low.c ****       {
  86:./lib/encoder_low.c ****         EncoderStop ();
  87:./lib/encoder_low.c ****         MotorSpeed (0, 0);
  88:./lib/encoder_low.c ****       }
  89:./lib/encoder_low.c ****     }
  90:./lib/encoder_low.c ****     return 0;
  91:./lib/encoder_low.c ****   }
  92:./lib/encoder_low.c ****   \endcode
  93:./lib/encoder_low.c **** *****************************************************************************/
  94:./lib/encoder_low.c **** void EncoderInit (void)
  95:./lib/encoder_low.c **** {
 124               		.stabn	68,0,95,.LM0-.LFBB1
 125               	.LM0:
 126               	.LFBB1:
 127               	/* prologue: function */
 128               	/* frame size = 0 */
 129               	/* stack size = 0 */
 130               	.L__stack_usage = 0
  96:./lib/encoder_low.c ****   /*
  97:./lib/encoder_low.c ****     Alle definierten Interrupts im Asuro sperren.
  98:./lib/encoder_low.c ****   */
GAS LISTING /tmp/ccNHaMON.s 			page 5


  99:./lib/encoder_low.c ****   cli();
 131               		.stabn	68,0,99,.LM1-.LFBB1
 132               	.LM1:
 133               	/* #APP */
 134               	 ;  99 "./lib/encoder_low.c" 1
 135 0000 F894      		cli
 136               	 ;  0 "" 2
 100:./lib/encoder_low.c **** 
 101:./lib/encoder_low.c ****   /*
 102:./lib/encoder_low.c ****     Odometrie im Interruptbetrieb weiter bearbeiten.
 103:./lib/encoder_low.c ****   */
 104:./lib/encoder_low.c ****   autoencode = TRUE;
 137               		.stabn	68,0,104,.LM2-.LFBB1
 138               	.LM2:
 139               	/* #NOAPP */
 140 0002 81E0      		ldi r24,lo8(1)
 141 0004 90E0      		ldi r25,0
 142 0006 9093 0000 		sts autoencode+1,r25
 143 000a 8093 0000 		sts autoencode,r24
 144               	.LBB4:
 145               	.LBB5:
 105:./lib/encoder_low.c ****   
 106:./lib/encoder_low.c ****   /*
 107:./lib/encoder_low.c ****     Die Odometrie Hell-/Dunkel-Zaehler zuruecksetzen/initialisieren.
 108:./lib/encoder_low.c ****    */ 
 109:./lib/encoder_low.c ****   EncoderSet (0, 0);
 110:./lib/encoder_low.c **** 
 111:./lib/encoder_low.c ****   /*
 112:./lib/encoder_low.c ****     Alle definierten Interrupts im Asuro wieder zulassen.
 113:./lib/encoder_low.c ****   */
 114:./lib/encoder_low.c ****   sei();
 115:./lib/encoder_low.c **** 
 116:./lib/encoder_low.c **** }
 117:./lib/encoder_low.c **** 
 118:./lib/encoder_low.c **** /****************************************************************************/
 119:./lib/encoder_low.c **** /*!
 120:./lib/encoder_low.c ****   \brief
 121:./lib/encoder_low.c ****   Den Interrupt Betrieb der Odometriesensoren-Messung anhalten.
 122:./lib/encoder_low.c **** 
 123:./lib/encoder_low.c ****   \see 
 124:./lib/encoder_low.c ****   Die globale Variable autoencode hier auf FALSE gesetzt.
 125:./lib/encoder_low.c **** 
 126:./lib/encoder_low.c ****   \par  Funktionsweise:
 127:./lib/encoder_low.c ****   Durch das setzen der globalen Variablen autoencode auf FALSE wird in\n
 128:./lib/encoder_low.c ****   der AD-Wandler-Interruptfunktion der Teil zur Bearbeitung uebersprungen.\n
 129:./lib/encoder_low.c ****   Dadurch wird der Wandler nicht mehr neu gestartet und somit stopp die\n
 130:./lib/encoder_low.c ****   Automatik.
 131:./lib/encoder_low.c **** 
 132:./lib/encoder_low.c ****   \par  Beispiel:
 133:./lib/encoder_low.c ****   (siehe unter EncoderInit bzw. in den examples)
 134:./lib/encoder_low.c **** *****************************************************************************/
 135:./lib/encoder_low.c **** void EncoderStop (void)
 136:./lib/encoder_low.c **** {
 137:./lib/encoder_low.c ****   autoencode = FALSE;
 138:./lib/encoder_low.c **** }
 139:./lib/encoder_low.c **** 
 140:./lib/encoder_low.c **** 
GAS LISTING /tmp/ccNHaMON.s 			page 6


 141:./lib/encoder_low.c **** 
 142:./lib/encoder_low.c **** /****************************************************************************/
 143:./lib/encoder_low.c **** /*!
 144:./lib/encoder_low.c ****   \brief
 145:./lib/encoder_low.c ****   Den Interrupt Betrieb der Odometriesensoren-Messung starten.
 146:./lib/encoder_low.c **** 
 147:./lib/encoder_low.c ****   \see 
 148:./lib/encoder_low.c ****   Die globale Variable autoencode hier auf TRUE gesetzt.
 149:./lib/encoder_low.c **** 
 150:./lib/encoder_low.c ****   \par Beispiel:
 151:./lib/encoder_low.c ****   (siehe unter EncoderInit bzw. in den examples)
 152:./lib/encoder_low.c **** *****************************************************************************/
 153:./lib/encoder_low.c **** void EncoderStart (void)
 154:./lib/encoder_low.c **** {
 155:./lib/encoder_low.c ****   autoencode = TRUE;
 156:./lib/encoder_low.c **** }
 157:./lib/encoder_low.c **** 
 158:./lib/encoder_low.c **** 
 159:./lib/encoder_low.c **** 
 160:./lib/encoder_low.c **** /****************************************************************************/
 161:./lib/encoder_low.c **** /*!
 162:./lib/encoder_low.c ****   \brief
 163:./lib/encoder_low.c ****   Interruptbetriebene Odometriesensoren Werte vorbelegen.
 164:./lib/encoder_low.c **** 
 165:./lib/encoder_low.c ****   \param[in]
 166:./lib/encoder_low.c ****   setl Wert fuer links
 167:./lib/encoder_low.c **** 
 168:./lib/encoder_low.c ****   \param[in]
 169:./lib/encoder_low.c ****   setr Wert fuer rechts
 170:./lib/encoder_low.c **** 
 171:./lib/encoder_low.c ****   \par  Hinweis:
 172:./lib/encoder_low.c ****   Initialisiert die beiden Werte in der globalen Variable encoder.\n
 173:./lib/encoder_low.c ****   Normalerweise werden die Zaehlerwerte mit 0 initialisiert. Fuer einige\n
 174:./lib/encoder_low.c ****   Anwendungen kann es sinnvoll sein auch schon bestimmte Werte vorzubelegen.
 175:./lib/encoder_low.c **** 
 176:./lib/encoder_low.c ****   \see
 177:./lib/encoder_low.c ****   Die globale Variable encoder wird hier initialisiert.
 178:./lib/encoder_low.c **** 
 179:./lib/encoder_low.c ****   \par Beispiel:
 180:./lib/encoder_low.c ****   (siehe unter den examples)
 181:./lib/encoder_low.c **** *****************************************************************************/
 182:./lib/encoder_low.c **** void EncoderSet (
 183:./lib/encoder_low.c ****   int setl,
 184:./lib/encoder_low.c ****   int setr)
 185:./lib/encoder_low.c **** {
 186:./lib/encoder_low.c ****   encoder [LEFT]  = setl;
 146               		.stabn	68,0,186,.LM3-.LFBB1
 147               	.LM3:
 148 000e E0E0      		ldi r30,lo8(encoder)
 149 0010 F0E0      		ldi r31,hi8(encoder)
 150 0012 1182      		std Z+1,__zero_reg__
 151 0014 1082      		st Z,__zero_reg__
 187:./lib/encoder_low.c ****   encoder [RIGHT] = setr;
 152               		.stabn	68,0,187,.LM4-.LFBB1
 153               	.LM4:
 154 0016 1382      		std Z+3,__zero_reg__
 155 0018 1282      		std Z+2,__zero_reg__
GAS LISTING /tmp/ccNHaMON.s 			page 7


 156               	.LBE5:
 157               	.LBE4:
 114:./lib/encoder_low.c **** 
 158               		.stabn	68,0,114,.LM5-.LFBB1
 159               	.LM5:
 160               	/* #APP */
 161               	 ;  114 "./lib/encoder_low.c" 1
 162 001a 7894      		sei
 163               	 ;  0 "" 2
 164               	/* #NOAPP */
 165 001c 0895      		ret
 166               		.size	EncoderInit, .-EncoderInit
 167               	.Lscope1:
 168               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 169               		.stabd	78,0,0
 170               		.section	.text.EncoderStop,"ax",@progbits
 171               		.stabs	"EncoderStop:F(0,47)",36,0,135,EncoderStop
 172               	.global	EncoderStop
 173               		.type	EncoderStop, @function
 174               	EncoderStop:
 175               		.stabd	46,0,0
 136:./lib/encoder_low.c ****   autoencode = FALSE;
 176               		.stabn	68,0,136,.LM6-.LFBB2
 177               	.LM6:
 178               	.LFBB2:
 179               	/* prologue: function */
 180               	/* frame size = 0 */
 181               	/* stack size = 0 */
 182               	.L__stack_usage = 0
 137:./lib/encoder_low.c **** }
 183               		.stabn	68,0,137,.LM7-.LFBB2
 184               	.LM7:
 185 0000 1092 0000 		sts autoencode+1,__zero_reg__
 186 0004 1092 0000 		sts autoencode,__zero_reg__
 187 0008 0895      		ret
 188               		.size	EncoderStop, .-EncoderStop
 189               	.Lscope2:
 190               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 191               		.stabd	78,0,0
 192               		.section	.text.EncoderStart,"ax",@progbits
 193               		.stabs	"EncoderStart:F(0,47)",36,0,153,EncoderStart
 194               	.global	EncoderStart
 195               		.type	EncoderStart, @function
 196               	EncoderStart:
 197               		.stabd	46,0,0
 154:./lib/encoder_low.c ****   autoencode = TRUE;
 198               		.stabn	68,0,154,.LM8-.LFBB3
 199               	.LM8:
 200               	.LFBB3:
 201               	/* prologue: function */
 202               	/* frame size = 0 */
 203               	/* stack size = 0 */
 204               	.L__stack_usage = 0
 155:./lib/encoder_low.c **** }
 205               		.stabn	68,0,155,.LM9-.LFBB3
 206               	.LM9:
 207 0000 81E0      		ldi r24,lo8(1)
GAS LISTING /tmp/ccNHaMON.s 			page 8


 208 0002 90E0      		ldi r25,0
 209 0004 9093 0000 		sts autoencode+1,r25
 210 0008 8093 0000 		sts autoencode,r24
 211 000c 0895      		ret
 212               		.size	EncoderStart, .-EncoderStart
 213               	.Lscope3:
 214               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 215               		.stabd	78,0,0
 216               		.section	.text.EncoderSet,"ax",@progbits
 217               		.stabs	"EncoderSet:F(0,47)",36,0,182,EncoderSet
 218               		.stabs	"setl:P(0,1)",64,0,183,24
 219               		.stabs	"setr:P(0,1)",64,0,184,22
 220               	.global	EncoderSet
 221               		.type	EncoderSet, @function
 222               	EncoderSet:
 223               		.stabd	46,0,0
 185:./lib/encoder_low.c ****   encoder [LEFT]  = setl;
 224               		.stabn	68,0,185,.LM10-.LFBB4
 225               	.LM10:
 226               	.LFBB4:
 227               	/* prologue: function */
 228               	/* frame size = 0 */
 229               	/* stack size = 0 */
 230               	.L__stack_usage = 0
 186:./lib/encoder_low.c ****   encoder [RIGHT] = setr;
 231               		.stabn	68,0,186,.LM11-.LFBB4
 232               	.LM11:
 233 0000 E0E0      		ldi r30,lo8(encoder)
 234 0002 F0E0      		ldi r31,hi8(encoder)
 235 0004 9183      		std Z+1,r25
 236 0006 8083      		st Z,r24
 237               		.stabn	68,0,187,.LM12-.LFBB4
 238               	.LM12:
 239 0008 7383      		std Z+3,r23
 240 000a 6283      		std Z+2,r22
 241 000c 0895      		ret
 242               		.size	EncoderSet, .-EncoderSet
 243               	.Lscope4:
 244               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 245               		.stabd	78,0,0
 246               		.text
 247               		.stabs	"",100,0,0,.Letext0
 248               	.Letext0:
 249               		.ident	"GCC: (GNU) 4.9.2"
GAS LISTING /tmp/ccNHaMON.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder_low.c
     /tmp/ccNHaMON.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccNHaMON.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccNHaMON.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccNHaMON.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccNHaMON.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccNHaMON.s:122    .text.EncoderInit:0000000000000000 EncoderInit
     /tmp/ccNHaMON.s:174    .text.EncoderStop:0000000000000000 EncoderStop
     /tmp/ccNHaMON.s:196    .text.EncoderStart:0000000000000000 EncoderStart
     /tmp/ccNHaMON.s:222    .text.EncoderSet:0000000000000000 EncoderSet

UNDEFINED SYMBOLS
autoencode
encoder
